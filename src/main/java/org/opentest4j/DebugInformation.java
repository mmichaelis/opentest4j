
package org.opentest4j;

import static java.util.Collections.unmodifiableMap;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;

import org.opentest4j.value.ValueDescriptor;

/**
 * @author Mark Michaelis
 * @since 1.0
 */
public class DebugInformation implements Serializable {

	private static final long serialVersionUID = -4561854355030078114L;
	private final Map<String, ValueDescriptor> values;

	private DebugInformation(Map<String, ValueDescriptor> values) {
		this.values = unmodifiableMap(values);
	}

	public static DebugInformationBuilder builder() {
		return new DebugInformationBuilder();
	}

	public ValueDescriptor getValue(String id) {
		return this.values.get(id);
	}

	public boolean hasValue(String id) {
		return this.values.containsKey(id);
	}

	public Set<String> getValueIds() {
		return this.values.keySet();
	}

	/**
	 * Builder for debug information to provide upon failure.
	 *
	 * @author Mark Michaelis
	 * @since 1.0
	 */
	public static class DebugInformationBuilder {
		private Map<String, ValueDescriptor> values = new HashMap<String, ValueDescriptor>();

		public DebugInformationBuilder addValue(String id, Object object) {
			this.values.put(id, ValueDescriptor.create(object));
			return this;
		}

		public DebugInformation build() {
			return new DebugInformation(this.values);
		}
	}
}
